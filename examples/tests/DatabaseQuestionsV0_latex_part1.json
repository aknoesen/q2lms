{
  "questions": [
    {
      "type": "multiple_choice",
      "title": "Signal Amplitude Analysis with Noise",
      "question_text": "When analyzing a noisy sinusoidal signal with amplitude $ A = 3V $ using peak detection, how does the measured amplitude compare to the true value?",
      "correct_answer": "Both B and C are correct",
      "choices": [
        "Exactly 3 $\\text{V}$",
        "Approximately 3 $\\text{V}$ (within $\\pm $0.3 $\\text{V}$)",
        "Varies with each measurement due to random noise",
        "Both B and C are correct"
      ],
      "feedback_correct": "Correct! Random noise causes measurement variability while keeping values relatively close to the true amplitude of 3 $\\text{V}$.",
      "feedback_incorrect": "Consider how random noise affects peak detection: it creates variability while keeping measurements near the true value.",
      "points": 2,
      "difficulty": "Medium",
      "topic": "Signals Time Domain",
      "tolerance": 0.05,
      "image_file": [],
      "subtopic": "Signal Processing"
    },
    {
      "type": "multiple_choice",
      "title": "Phase Shift Effect on Amplitude",
      "question_text": "For a sinusoid A $\\cdotsin $(2 $\\pift $ + $\\phi $), what happens to the measured amplitude when phase $\\phi $ changes from $\\pi $/4 to $\\pi $/2?",
      "correct_answer": "Amplitude remains approximately the same",
      "choices": [
        "Amplitude increases",
        "Amplitude decreases",
        "Amplitude remains approximately the same",
        "Signal disappears"
      ],
      "feedback_correct": "Correct! Phase shift $\\phi $ only affects timing, not the maximum amplitude A of the sinusoid.",
      "feedback_incorrect": "Phase $\\phi $ shifts the signal in time but doesn't change the peak amplitude A.",
      "points": 2,
      "difficulty": "Easy",
      "topic": "Signals Time Domain",
      "tolerance": 0.05,
      "image_file": [],
      "subtopic": "Signal Processing"
    },
    {
      "type": "multiple_choice",
      "title": "OOP Design Pattern Recognition",
      "question_text": "Two classes - SignalGenerator and SignalAnalyzer - model real-world instruments with distinct responsibilities. This exemplifies which OOP principle?",
      "correct_answer": "Abstraction modeling real-world devices",
      "choices": [
        "Inheritance with parent-child relationships",
        "Composition with nested class structures",
        "Abstraction modeling real-world devices",
        "Polymorphism with context-dependent behavior"
      ],
      "feedback_correct": "Correct! Abstraction creates simplified models of complex real-world entities with clearly defined interfaces.",
      "feedback_incorrect": "These classes model real instruments as abstract entities with specific responsibilities - this is abstraction.",
      "points": 3,
      "difficulty": "Medium",
      "topic": "Object-Oriented Programming",
      "tolerance": 0.05,
      "image_file": [],
      "subtopic": "empty"
    },
    {
      "type": "multiple_choice",
      "title": "Aliasing in Video Sampling",
      "question_text": "A fan rotating at 60 $\\text{Hz}$ is recorded at 50 frames/second. What aliasing effect occurs?",
      "correct_answer": "Fan appears to rotate backward",
      "choices": [
        "Fan appears to rotate faster",
        "Fan appears to rotate slower",
        "Fan appears to rotate backward",
        "Fan appears stationary"
      ],
      "feedback_correct": "Correct! Undersampling at fs < 2$ f_{0}$ creates aliasing where 60 $\\text{Hz}$ appears as 10 $\\text{Hz}$ in reverse direction.",
      "feedback_incorrect": "When sampling rate fs < 2$ f_{0}$, aliasing causes apparent reverse rotation at |fs - $ f_{0}$| Hz.",
      "points": 3,
      "difficulty": "Hard",
      "topic": "Signals Time Domain",
      "tolerance": 0.05,
      "image_file": [],
      "subtopic": "Sampling"
    },
    {
      "type": "fill_in_blank",
      "title": "Stroboscopic Effect Definition",
      "question_text": "In video systems, aliasing creates _______ effects where fast-moving objects appear to move erratically due to insufficient sampling.",
      "correct_answer": "stroboscopic",
      "choices": [],
      "feedback_correct": "Correct! Stroboscopic effects result from temporal aliasing in video sampling systems.",
      "feedback_incorrect": "This visual phenomenon caused by undersampling is called the stroboscopic effect.",
      "points": 2,
      "difficulty": "Medium",
      "topic": "Signals Time Domain",
      "tolerance": 0.05,
      "image_file": [],
      "subtopic": "Sampling"
    },
    {
      "type": "numerical",
      "title": "Nyquist Frequency Calculation",
      "question_text": "For a sampling frequency fs = 10 $\\text{kHz}$, calculate the maximum signal frequency that can be accurately represented using the Nyquist criterion fmax = fs/2.",
      "correct_answer": "5000",
      "choices": [],
      "feedback_correct": "Correct! fmax = fs/2 = 10 $\\text{kHz}$/2 = 5k $ Hz = 5000$\\text{H}$ z $ per Nyquist-Shannon theorem.",
      "feedback_incorrect": "Apply Nyquist criterion: maximum frequency = fs/2 = 10 $\\text{kHz}$/2 = 5 $\\text{kHz}$.",
      "points": 3,
      "difficulty": "Easy",
      "topic": "Signals Time Domain",
      "tolerance": 1,
      "image_file": [],
      "subtopic": "Sampling"
    },
    {
      "type": "multiple_choice",
      "title": "Information Loss in Undersampling",
      "question_text": "What occurs when a signal is sampled below the Nyquist rate fs < 2fmax?",
      "correct_answer": "Information lost due to aliasing",
      "choices": [
        "Information preserved with distortion",
        "Information lost due to aliasing",
        "Information quality improves",
        "Sampling rate has no effect"
      ],
      "feedback_correct": "Correct! Sampling below Nyquist rate causes irreversible information loss through frequency aliasing.",
      "feedback_incorrect": "Undersampling causes aliasing, making perfect signal reconstruction impossible.",
      "points": 2,
      "difficulty": "Medium",
      "topic": "Signals Time Domain",
      "tolerance": 0.05,
      "image_file": [],
      "subtopic": "Sampling"
    },
    {
      "type": "multiple_choice",
      "title": "Digital Audio Sampling Requirements",
      "question_text": "For CD-quality audio covering 20 $\\text{Hz}$-20 $\\text{kHz}$, why is 44.1 $\\text{kHz}$ sampling used?",
      "correct_answer": "Ensures accurate frequency representation",
      "choices": [
        "Determines dynamic range",
        "Ensures accurate frequency representation",
        "Minimizes file size",
        "Reduces quantization noise"
      ],
      "feedback_correct": "Correct! fs = 44.1 $\\text{kHz}$ > 2 $\\times $20 $\\text{kHz}$ satisfies Nyquist criterion for full audio spectrum capture.",
      "feedback_incorrect": "Sampling at 44.1 $\\text{kHz}$ ensures fs > 2fmax = 40 $\\text{kHz}$ to prevent aliasing per Nyquist theorem.",
      "points": 2,
      "difficulty": "Easy",
      "topic": "Signals Time Domain",
      "tolerance": 0.05,
      "image_file": [],
      "subtopic": "Sampling"
    },
    {
      "type": "true_false",
      "title": "Aliasing Condition",
      "question_text": "Aliasing occurs when the sampling frequency fs is less than twice the highest signal frequency: fs < 2fmax.",
      "correct_answer": "True",
      "choices": [
        "True",
        "False"
      ],
      "feedback_correct": "Correct! This violates the Nyquist-Shannon sampling theorem, causing aliasing distortion.",
      "feedback_incorrect": "The Nyquist criterion requires fs $\\geq $ 2fmax to prevent aliasing.",
      "points": 2,
      "difficulty": "Easy",
      "topic": "Signals Time Domain",
      "tolerance": 0.05,
      "image_file": [],
      "subtopic": "Sampling"
    },
    {
      "type": "multiple_choice",
      "title": "Signal Reconstruction Process",
      "question_text": "In digital signal processing, 'reconstruction' refers to:",
      "correct_answer": "Recreating continuous signals from samples",
      "choices": [
        "Signal amplification",
        "Analog-to-digital conversion",
        "Recreating continuous signals from samples",
        "Noise filtering"
      ],
      "feedback_correct": "Correct! Reconstruction uses interpolation to rebuild continuous signals from discrete sample points.",
      "feedback_incorrect": "Reconstruction is the process of converting discrete samples back to continuous-time signals.",
      "points": 2,
      "difficulty": "Easy",
      "topic": "Signals Time Domain",
      "tolerance": 0.05,
      "image_file": [],
      "subtopic": "Signal Processing"
    },
    {
      "type": "fill_in_blank",
      "title": "Aliasing Signal Distortion",
      "question_text": "When aliasing occurs, the original signal becomes _______ and perfect reconstruction becomes impossible.",
      "correct_answer": "distorted",
      "choices": [],
      "feedback_correct": "Correct! Aliasing introduces irreversible frequency distortion to the sampled signal.",
      "feedback_incorrect": "Aliasing causes signal distortion that cannot be corrected post-sampling.",
      "points": 2,
      "difficulty": "Easy",
      "topic": "Signals Time Domain",
      "tolerance": 0.05,
      "image_file": [],
      "subtopic": "Sampling"
    },
    {
      "type": "multiple_choice",
      "title": "Class Inheritance Implementation",
      "question_text": "Which MATLAB syntax correctly implements class Vehicle inheriting from a superclass Transportation?",
      "correct_answer": "classdef Vehicle < Transportation",
      "choices": [
        "classdef Vehicle < Transportation",
        "classdef Vehicle extends Transportation",
        "classdef Vehicle : Transportation",
        "classdef Vehicle inherits Transportation"
      ],
      "feedback_correct": "Correct! MATLAB uses the < operator to specify inheritance: classdef ChildClass < ParentClass",
      "feedback_incorrect": "MATLAB inheritance syntax uses < operator: classdef Vehicle < Transportation",
      "points": 2,
      "difficulty": "Easy",
      "topic": "Object-Oriented Programming",
      "tolerance": 0.05,
      "image_file": [],
      "subtopic": "empty"
    },
    {
      "type": "multiple_choice",
      "title": "Phase Relationship Analysis",
      "question_text": "Given two sinusoids with 90^$\\circ $ phase difference, which statement is correct?",
      "correct_answer": "Leading/lagging depends on reference choice",
      "choices": [
        "One signal always leads",
        "One signal always lags",
        "Neither signal leads",
        "Leading/lagging depends on reference choice"
      ],
      "feedback_correct": "Correct! Phase difference of 90^$\\circ $ = $\\pi $/2 $\\text{rad}$ can represent either +90^$\\circ $ lead or -90^$\\circ $ lag depending on reference.",
      "feedback_incorrect": "Phase relationships are relative - the same 90^$\\circ $ difference can be interpreted as leading or lagging.",
      "points": 3,
      "difficulty": "Hard",
      "topic": "Signals Time Domain",
      "tolerance": 0.05,
      "image_file": [],
      "subtopic": "Signal Processing"
    },
    {
      "type": "fill_in_blank",
      "title": "Audio Aliasing Artifacts",
      "question_text": "In digital audio, aliasing introduces unwanted _______ components not present in the original signal.",
      "correct_answer": "frequency",
      "choices": [],
      "feedback_correct": "Correct! Aliasing creates phantom frequency components through spectral folding effects.",
      "feedback_incorrect": "Aliasing generates spurious frequency components due to undersampling.",
      "points": 2,
      "difficulty": "Medium",
      "topic": "Signals Time Domain",
      "tolerance": 0.05,
      "image_file": [],
      "subtopic": "Signal Processing"
    },
    {
      "type": "numerical",
      "title": "Fourier Transform Frequency Resolution",
      "question_text": "For an $ N = 1024-point $ FFT with sampling frequency fs = 8192 $\\text{Hz}$, calculate the frequency resolution Δf = fs/N in Hz.",
      "correct_answer": "8",
      "choices": [],
      "feedback_correct": "Correct! Δf = fs/$ N = 8192$\\text{Hz}$/1024$ = 8 $\\text{Hz}$ frequency bin spacing.",
      "feedback_incorrect": "Frequency resolution: Δf = fs/$ N = 8192/1024$ = 8 $\\text{Hz}$ per bin.",
      "points": 3,
      "difficulty": "Medium",
      "topic": "Signals Frequency Domain",
      "tolerance": 0.1,
      "image_file": [],
      "subtopic": "Signal Processing"
    },
    {
      "type": "multiple_choice",
      "title": "Phase Leading Definition",
      "question_text": "For sinusoids $ y_{1}$(t) = $ A_{1$\\text{s}$ in}$($\\omegat $ + $\\phi $_1) and $ y_{2}$(t) = $ A_{2$\\text{s}$ in}$($\\omegat $ + $\\phi $_2), if $\\phi $_1 > $\\phi $_2, which statement is correct?",
      "correct_answer": "$ y_{1}$ reaches its peak value earlier in time",
      "choices": [
        "$ y_{1}$ reaches its peak value earlier in time",
        "$ y_{1}$ has higher frequency $\\omega $",
        "$ y_{1}$ has larger amplitude $ A_{1}$",
        "$ y_{1}$ is shifted left on the graph"
      ],
      "feedback_correct": "Correct! Leading phase $\\phi $_1 > $\\phi $_2 $\\text{m}$ eans earlier peak occurrence in the time domain.",
      "feedback_incorrect": "Phase shift $\\phi $ only affects timing, not frequency $\\omega $ or amplitude A.",
      "points": 2,
      "difficulty": "Easy",
      "topic": "Signals Time Domain",
      "tolerance": 0.05,
      "image_file": [],
      "subtopic": "Signal Processing"
    },
    {
      "type": "multiple_choice",
      "title": "Nyquist Rate for 1 $\\text{kHz}$ Signal",
      "question_text": "A signal contains frequencies up to fₘₐₓ = 1 $\\text{kHz}$. What is the minimum Nyquist sampling rate fₛ?",
      "correct_answer": "fₛ > 2 $\\text{kHz}$ (e.g., 2.1 $\\text{kHz}$)",
      "choices": [
        "fₛ = 1 $\\text{kHz}$",
        "fₛ = 2 $\\text{kHz}$",
        "fₛ > 2 $\\text{kHz}$ (e.g., 2.1 $\\text{kHz}$)",
        "fₛ = 0.5 $\\text{kHz}$"
      ],
      "feedback_correct": "Correct! Nyquist criterion requires fₛ > 2fₘₐₓ = 2 $\\times $1k $ Hz = 2kHz $ to prevent aliasing.",
      "feedback_incorrect": "Nyquist-Shannon theorem: sampling frequency must exceed twice the maximum signal frequency.",
      "points": 3,
      "difficulty": "Medium",
      "topic": "Signals Time Domain",
      "tolerance": 0.05,
      "image_file": [],
      "subtopic": "Nyquist Theorem"
    },
    {
      "type": "multiple_choice",
      "title": "Aliasing Prevention Scenarios",
      "question_text": "Which sampling scenario guarantees NO aliasing for a signal with bandwidth $ B = 8$\\text{kHz}$?$",
      "correct_answer": "fₛ > 2B (oversampling)",
      "choices": [
        "fₛ > 2B (oversampling)",
        "fₛ < 2B (undersampling)",
        "fₛ = 2B (critical sampling)",
        "All scenarios prevent aliasing"
      ],
      "feedback_correct": "Correct! Only oversampling with fₛ > 2$ B = 16kHz $ prevents aliasing per Nyquist criterion.",
      "feedback_incorrect": "Undersampling (fₛ < 2B) and critical sampling (fₛ = 2B) both risk aliasing.",
      "points": 3,
      "difficulty": "Medium",
      "topic": "Signals Time Domain",
      "tolerance": 0.05,
      "image_file": [],
      "subtopic": "Nyquist-Theorem"
    },
    {
      "type": "multiple_choice",
      "title": "Signal Reconstruction Importance",
      "question_text": "Why is sampling above the Nyquist rate fₛ > 2fₘₐₓ crucial for digital signal processing?",
      "correct_answer": "Ensures perfect signal reconstruction without aliasing",
      "choices": [
        "Reduces quantization noise",
        "Ensures perfect signal reconstruction without aliasing",
        "Simplifies ADC design",
        "Minimizes storage requirements"
      ],
      "feedback_correct": "Correct! Nyquist criterion guarantees sufficient information capture for accurate reconstruction.",
      "feedback_incorrect": "The primary purpose is preventing aliasing distortion, enabling faithful signal reconstruction.",
      "points": 2,
      "difficulty": "Easy",
      "topic": "Signals Time Domain",
      "tolerance": 0.05,
      "image_file": [],
      "subtopic": "Nyquist-Shannon Theorem"
    },
    {
      "type": "numerical",
      "title": "Minimum Sampling Rate Calculation",
      "question_text": "A signal has maximum frequency component fₘₐₓ = 5 $\\text{kHz}$. Calculate the minimum practical sampling rate in kHz to avoid aliasing.",
      "correct_answer": "10.1",
      "choices": [],
      "feedback_correct": "Correct! fₛ > 2fₘₐₓ = 2 $\\times $5k $ Hz = 10kHz $, so fₛ $\\geq $ 10.1 $\\text{kHz}$ satisfies Nyquist criterion.",
      "feedback_incorrect": "Apply Nyquist theorem: fₛ must be greater than 2 $\\times $5k $ Hz = 10kHz $.",
      "points": 3,
      "difficulty": "Easy",
      "topic": "Signals Time Domain",
      "tolerance": 0.1,
      "image_file": [],
      "subtopic": "Nyquist Theorem"
    },
    {
      "type": "true_false",
      "title": "Perfect Reconstruction Limitations",
      "question_text": "Sampling slightly above the Nyquist rate (fₛ $\\approx $ 2.01fₘₐₓ) guarantees perfect signal reconstruction in all practical systems.",
      "correct_answer": "False",
      "choices": [
        "True",
        "False"
      ],
      "feedback_correct": "Correct! Real systems have noise, non-ideal filters, and quantization effects that limit perfect reconstruction.",
      "feedback_incorrect": "Practical limitations like thermal noise, filter roll-off, and finite precision prevent perfection.",
      "points": 2,
      "difficulty": "Hard",
      "topic": "",
      "tolerance": 0.05,
      "image_file": [],
      "subtopic": "Nyquist Theorem"
    },
    {
      "type": "numerical",
      "title": "Anti-Aliasing Filter Design",
      "question_text": "For a signal sampled at fₛ = 16 $\\text{kHz}$, calculate the maximum anti-aliasing filter cutoff frequency fc in kHz.",
      "correct_answer": "8.0",
      "choices": [],
      "feedback_correct": "Correct! fc should be slightly below fₛ/2 = 16 $\\text{kHz}$/2 = 8 $\\text{kHz}$ to prevent aliasing.",
      "feedback_incorrect": "Anti-aliasing filter cutoff: fc $\\leq $ fₛ/2 = 16 $\\text{kHz}$/2 = 8 $\\text{kHz}$",
      "points": 3,
      "difficulty": "Medium",
      "topic": "Signals Frequency Domain",
      "tolerance": 0.1,
      "image_file": [],
      "subtopic": "Nyquist Theorem"
    },
    {
      "type": "fill_in_blank",
      "title": "Nyquist Rate Condition",
      "question_text": "To avoid aliasing, the sampling frequency fₛ must be _______ twice the highest signal frequency: fₛ _____ 2fₘₐₓ.",
      "correct_answer": "greater than",
      "choices": [],
      "feedback_correct": "Correct! Nyquist-Shannon theorem requires fₛ > 2fₘₐₓ for alias-free sampling.",
      "feedback_incorrect": "The strict inequality fₛ > 2fₘₐₓ is essential to prevent frequency folding.",
      "points": 2,
      "difficulty": "Easy",
      "topic": "Signals Time Domain",
      "tolerance": 0.05,
      "image_file": [],
      "subtopic": "Nyquist Theorem"
    },
    {
      "type": "multiple_choice",
      "title": "Oversampling Benefits",
      "question_text": "What is the primary advantage of sampling at fₛ $\\gg $ 2fₘₐₓ (significant oversampling)?",
      "correct_answer": "Relaxed anti-aliasing filter requirements",
      "choices": [
        "Reduced computational complexity",
        "Increased aliasing tolerance",
        "Relaxed anti-aliasing filter requirements",
        "Lower power consumption"
      ],
      "feedback_correct": "Correct! Oversampling allows simpler, less steep anti-aliasing filters with wider transition bands.",
      "feedback_incorrect": "Higher fₛ creates guard bands, making filter design less critical for aliasing prevention.",
      "points": 3,
      "difficulty": "Hard",
      "topic": "Signals Time Domain",
      "tolerance": 0.05,
      "image_file": [],
      "subtopic": "Nyquist Theorem"
    },
    {
      "type": "multiple_choice",
      "title": "Anti-Aliasing Filter Placement",
      "question_text": "Where should an anti-aliasing filter with cutoff fc = fₛ/2 be positioned in a sampling system?",
      "correct_answer": "Before the sample-and-hold circuit",
      "choices": [
        "After the ADC converter",
        "Before the sample-and-hold circuit",
        "Between ADC and DSP processor",
        "In the digital domain only"
      ],
      "feedback_correct": "Correct! Anti-aliasing filters must be analog filters placed before sampling to remove high frequencies.",
      "feedback_incorrect": "Aliasing prevention requires analog filtering before the sampling operation occurs.",
      "points": 2,
      "difficulty": "Medium",
      "topic": "Signals Frequency Domain",
      "tolerance": 0.05,
      "image_file": [],
      "subtopic": "Nyquist Theorem"
    },
    {
      "type": "multiple_choice",
      "title": "Digital Audio Sampling Rates",
      "question_text": "CD audio samples at fₛ = 44.1 $\\text{kHz}$ for human hearing range 20 $\\text{Hz}$-20 $\\text{kHz}$. Which application uses higher oversampling?",
      "correct_answer": "High-resolution audio (96 $\\text{kHz}$)",
      "choices": [
        "Digital telephony (8 $\\text{kHz}$)",
        "High-resolution audio (96 $\\text{kHz}$)",
        "AM radio (22 $\\text{kHz}$)",
        "FM radio (32 $\\text{kHz}$)"
      ],
      "feedback_correct": "Correct! 96 $\\text{kHz}$ provides 2.4 $\\times $ oversampling ratio compared to 44.1 $\\text{kHz}$ for enhanced quality.",
      "feedback_incorrect": "Higher sampling rates like 96 $\\text{kHz}$ offer greater oversampling margins above the Nyquist limit.",
      "points": 2,
      "difficulty": "Easy",
      "topic": "Signals Time Domain",
      "tolerance": 0.05,
      "image_file": [],
      "subtopic": "Nyquist Theorem"
    },
    {
      "type": "multiple_choice",
      "title": "Practical Reconstruction Challenges",
      "question_text": "Even with fₛ > 2fₘₐₓ, what factors limit perfect signal reconstruction in real systems?",
      "correct_answer": "Thermal noise and quantization errors",
      "choices": [
        "Infinite computational power",
        "Ideal brick-wall filters available",
        "Thermal noise and quantization errors",
        "Perfect timing synchronization"
      ],
      "feedback_correct": "Correct! Real-world noise, finite ADC resolution, and non-ideal components prevent perfect reconstruction.",
      "feedback_incorrect": "Practical systems have noise, finite precision, and component tolerances affecting reconstruction quality.",
      "points": 3,
      "difficulty": "Hard",
      "topic": "Signals Frequency Domain",
      "tolerance": 0.05,
      "image_file": [],
      "subtopic": "Nyquist Theorem"
    },
    {
      "type": "numerical",
      "title": "Safety Margin Calculation",
      "question_text": "For a 8 $\\text{kHz}$ bandwidth signal, calculate the recommended sampling rate in kHz with 25% safety margin above Nyquist.",
      "correct_answer": "20.0",
      "choices": [],
      "feedback_correct": "Correct! fₛ = 1.25 $\\times $ 2 $\\times $ 8k $ Hz = 1$.25 $\\times $ 16k $ Hz = 20kHz $ provides 25% margin.",
      "feedback_incorrect": "Safety margin: fₛ = 1.25 $\\times $ 2fₘₐₓ = 1.25 $\\times $ 16k $ Hz = 20kHz $",
      "points": 3,
      "difficulty": "Medium",
      "topic": "Signals Time Domain",
      "tolerance": 0.1,
      "image_file": [],
      "subtopic": "Nyquist Theorem"
    },
    {
      "type": "multiple_choice",
      "title": "Undersampling Consequences",
      "question_text": "A 12 $\\text{kHz}$ signal sampled at fₛ = 8 $\\text{kHz}$ violates Nyquist criterion. What aliased frequency fₐ appears?",
      "correct_answer": "fₐ = 4 $\\text{kHz}$",
      "choices": [
        "fₐ = 4 $\\text{kHz}$",
        "fₐ = 12 $\\text{kHz}$",
        "fₐ = 8 $\\text{kHz}$",
        "fₐ = 20 $\\text{kHz}$"
      ],
      "feedback_correct": "Correct! Aliasing formula: fₐ = |fₛ - $ f_{0}$| = |8 $\\text{kHz}$ - 12 $\\text{kHz}$| = 4 $\\text{kHz}$",
      "feedback_incorrect": "For undersampling: aliased frequency fₐ = |fₛ - $ f_{0}$| = |8 - 12| = 4 $\\text{kHz}$",
      "points": 4,
      "difficulty": "Hard",
      "topic": "Signals Time Domain",
      "tolerance": 0.05,
      "image_file": [],
      "subtopic": "Nyquist-Shannon Theorem"
    },
    {
      "type": "multiple_choice",
      "title": "Nyquist Terminology",
      "question_text": "Match the correct definition: The Nyquist frequency $ f_{n}$ = fₛ/2 represents:",
      "correct_answer": "Half the sampling frequency",
      "choices": [
        "Maximum signal frequency",
        "Minimum sampling frequency",
        "Half the sampling frequency",
        "Anti-aliasing cutoff frequency"
      ],
      "feedback_correct": "Correct! Nyquist frequency $ f_{n}$ = fₛ/2 is half the sampling rate, the theoretical maximum recoverable frequency.",
      "feedback_incorrect": "Nyquist frequency is specifically defined as $ f_{n}$ = fₛ/2, half the sampling frequency.",
      "points": 2,
      "difficulty": "Easy",
      "topic": "Signals Time Domain",
      "tolerance": 0.05,
      "image_file": [],
      "subtopic": "Nyquist-Shannon Theorem"
    },
    {
      "type": "multiple_choice",
      "title": "OOP Object Definition",
      "question_text": "In object-oriented programming, an object represents:",
      "correct_answer": "A real-world entity with properties and methods",
      "choices": [
        "A blueprint for creating data structures",
        "A function that operates on global variables",
        "A real-world entity with properties and methods",
        "A named variable storing primitive data"
      ],
      "feedback_correct": "Correct! Objects model real-world entities by encapsulating both data (properties) and behavior (methods).",
      "feedback_incorrect": "Objects are instances that represent tangible or conceptual entities from the problem domain.",
      "points": 2,
      "difficulty": "Easy",
      "topic": "Object-Oriented Programming",
      "tolerance": 0.05,
      "image_file": [],
      "subtopic": "empty"
    },
    {
      "type": "multiple_choice",
      "title": "Object Encapsulation",
      "question_text": "What two fundamental elements does an object combine in OOP design?",
      "correct_answer": "Properties and methods",
      "choices": [
        "Classes and inheritance",
        "Properties and methods",
        "Abstraction and polymorphism",
        "Variables and functions"
      ],
      "feedback_correct": "Correct! Objects encapsulate data (properties/attributes) and operations (methods/functions) together.",
      "feedback_incorrect": "Encapsulation binds data and the operations that manipulate that data into a single unit.",
      "points": 2,
      "difficulty": "Easy",
      "topic": "Object-Oriented Programming",
      "tolerance": 0.05,
      "image_file": [],
      "subtopic": "empty"
    },
    {
      "type": "multiple_choice",
      "title": "Class vs Object Relationship",
      "question_text": "What is the relationship between a class and an object in OOP?",
      "correct_answer": "Class is a blueprint for creating objects",
      "choices": [
        "Class is a specific instance",
        "Object modifies class data",
        "Class is a blueprint for creating objects",
        "Object defines class properties"
      ],
      "feedback_correct": "Correct! A class serves as a template/blueprint that defines the structure and behavior for object instances.",
      "feedback_incorrect": "Classes define the template; objects are specific instances created from that template.",
      "points": 2,
      "difficulty": "Easy",
      "topic": "Object-Oriented Programming",
      "tolerance": 0.05,
      "image_file": [],
      "subtopic": "empty"
    },
    {
      "type": "multiple_choice",
      "title": "Class Definition Scope",
      "question_text": "A class definition specifies:",
      "correct_answer": "Both structure and behavior of objects",
      "choices": [
        "Only data attributes of objects",
        "Only methods/behaviors of objects",
        "Both structure and behavior of objects",
        "Display formatting for objects"
      ],
      "feedback_correct": "Correct! Classes define both the data structure (attributes) and behaviors (methods) that objects will have.",
      "feedback_incorrect": "Class definitions encompass both what objects contain (data) and what they can do (operations).",
      "points": 2,
      "difficulty": "Easy",
      "topic": "Object-Oriented Programming",
      "tolerance": 0.05,
      "image_file": [],
      "subtopic": "empty"
    },
    {
      "type": "multiple_choice",
      "title": "Property Definition in OOP",
      "question_text": "In OOP, a property (attribute) is:",
      "correct_answer": "A named data field associated with objects",
      "choices": [
        "An action an object performs",
        "A blueprint for object creation",
        "A named data field associated with objects",
        "A method initialization routine"
      ],
      "feedback_correct": "Correct! Properties are named data fields that store the state/characteristics of an object.",
      "feedback_incorrect": "Properties hold the data that describes an object's current state and characteristics.",
      "points": 2,
      "difficulty": "Easy",
      "topic": "Object-Oriented Programming",
      "tolerance": 0.05,
      "image_file": [],
      "subtopic": "empty"
    },
    {
      "type": "multiple_choice",
      "title": "Object Property Identification",
      "question_text": "In a Car class definition, which element represents a property (attribute) rather than a method?",
      "correct_answer": "color",
      "choices": [
        "start()",
        "accelerate()",
        "color",
        "stop()"
      ],
      "feedback_correct": "Correct! 'color' is a data property that describes a characteristic of the car object.",
      "feedback_incorrect": "Properties store data about objects. Methods like start() and stop() are actions, not characteristics.",
      "points": 2,
      "difficulty": "Easy",
      "topic": "Object-Oriented Programming",
      "tolerance": 0.05,
      "image_file": [],
      "subtopic": "empty"
    },
    {
      "type": "multiple_choice",
      "title": "Method Definition in OOP",
      "question_text": "In object-oriented programming, methods are:",
      "correct_answer": "Functions that operate on object properties",
      "choices": [
        "Blueprints for creating objects",
        "Data fields stored within objects",
        "Functions that operate on object properties",
        "Class inheritance mechanisms"
      ],
      "feedback_correct": "Correct! Methods are functions that define behaviors and operations for objects.",
      "feedback_incorrect": "Methods are behavioral functions, not data storage or structural elements.",
      "points": 2,
      "difficulty": "Easy",
      "topic": "Object-Oriented Programming",
      "tolerance": 0.05,
      "image_file": [],
      "subtopic": "empty"
    },
    {
      "type": "multiple_choice",
      "title": "Primary Method Function",
      "question_text": "What is the primary purpose of methods in OOP design?",
      "correct_answer": "Perform operations on object properties",
      "choices": [
        "Store object data",
        "Define class structure",
        "Perform operations on object properties",
        "Create new class instances"
      ],
      "feedback_correct": "Correct! Methods encapsulate behaviors that manipulate and interact with object data.",
      "feedback_incorrect": "Methods define actions and behaviors, not data storage or structural definitions.",
      "points": 2,
      "difficulty": "Easy",
      "topic": "Object-Oriented Programming",
      "tolerance": 0.05,
      "image_file": [],
      "subtopic": "empty"
    },
    {
      "type": "multiple_choice",
      "title": "Object Instantiation Process",
      "question_text": "In OOP, instantiation refers to:",
      "correct_answer": "Creating object instances from class templates",
      "choices": [
        "Modifying existing object properties",
        "Destroying objects from memory",
        "Creating object instances from class templates",
        "Defining new class blueprints"
      ],
      "feedback_correct": "Correct! Instantiation is the process of creating specific object instances from class definitions.",
      "feedback_incorrect": "Instantiation specifically refers to object creation, not modification or destruction.",
      "points": 2,
      "difficulty": "Easy",
      "topic": "Object-Oriented Programming",
      "tolerance": 0.05,
      "image_file": [],
      "subtopic": "empty"
    },
    {
      "type": "multiple_choice",
      "title": "Class-Object Relationship Analogy",
      "question_text": "Which analogy best describes the relationship between classes and object instantiation?",
      "correct_answer": "Class is the cookie cutter, instantiation creates cookies",
      "choices": [
        "Class is the cookie",
        "Class is the cookie cutter, instantiation creates cookies",
        "Object is the cookie cutter",
        "Object is the recipe template"
      ],
      "feedback_correct": "Correct! Classes serve as templates (cookie cutter) that create multiple object instances (cookies).",
      "feedback_incorrect": "Classes are templates that produce objects, like cookie cutters creating individual cookies.",
      "points": 3,
      "difficulty": "Medium",
      "topic": "Object-Oriented Programming",
      "tolerance": 0.05,
      "image_file": [],
      "subtopic": "empty"
    },
    {
      "type": "multiple_choice",
      "title": "Encapsulation Principle",
      "question_text": "What does encapsulation achieve in object-oriented design?",
      "correct_answer": "Bundles data and methods while restricting external access",
      "choices": [
        "Simplifies object creation syntax",
        "Bundles data and methods while restricting external access",
        "Enables global access to all object data",
        "Optimizes program execution speed"
      ],
      "feedback_correct": "Correct! Encapsulation creates data hiding and controlled access through defined interfaces.",
      "feedback_incorrect": "Encapsulation is about data protection and controlled access, not performance or global visibility.",
      "points": 3,
      "difficulty": "Medium",
      "topic": "Object-Oriented Programming",
      "tolerance": 0.05,
      "image_file": [],
      "subtopic": "empty"
    },
    {
      "type": "multiple_choice",
      "title": "Encapsulation Benefits",
      "question_text": "What is the primary benefit of implementing encapsulation in software design?",
      "correct_answer": "Enhanced reliability and maintainability",
      "choices": [
        "Increased code complexity",
        "Enhanced reliability and maintainability",
        "Reduced system security",
        "Faster object instantiation"
      ],
      "feedback_correct": "Correct! Encapsulation improves code quality through data protection and interface clarity.",
      "feedback_incorrect": "Encapsulation promotes better software engineering practices, not complexity or security reduction.",
      "points": 2,
      "difficulty": "Easy",
      "topic": "Object-Oriented Programming",
      "tolerance": 0.05,
      "image_file": [],
      "subtopic": "empty"
    },
    {
      "type": "multiple_choice",
      "title": "Constructor Function Role",
      "question_text": "What is the primary role of a constructor in OOP?",
      "correct_answer": "Initialize object attributes during instantiation",
      "choices": [
        "Define class property specifications",
        "Control object display formatting",
        "Initialize object attributes during instantiation",
        "Destroy objects from memory"
      ],
      "feedback_correct": "Correct! Constructors set initial values for object properties when instances are created.",
      "feedback_incorrect": "Constructors specifically handle object initialization, not definition, display, or destruction.",
      "points": 2,
      "difficulty": "Easy",
      "topic": "Object-Oriented Programming",
      "tolerance": 0.05,
      "image_file": [],
      "subtopic": "empty"
    },
    {
      "type": "multiple_choice",
      "title": "Constructor Invocation Timing",
      "question_text": "When is a constructor automatically invoked in the object lifecycle?",
      "correct_answer": "When new object instances are created",
      "choices": [
        "When methods are called",
        "When new object instances are created",
        "When properties are modified",
        "When classes are defined"
      ],
      "feedback_correct": "Correct! Constructors execute automatically during object instantiation to set initial state.",
      "feedback_incorrect": "Constructor execution is tied specifically to object creation, not other lifecycle events.",
      "points": 2,
      "difficulty": "Easy",
      "topic": "Object-Oriented Programming",
      "tolerance": 0.05,
      "image_file": [],
      "subtopic": "empty"
    },
    {
      "type": "multiple_choice",
      "title": "Signal Sampling Definition",
      "question_text": "In digital signal processing, sampling a continuous signal means:",
      "correct_answer": "Taking discrete measurements at regular time intervals Δt",
      "choices": [
        "Converting analog to digital format",
        "Measuring signal frequency content",
        "Taking discrete measurements at regular time intervals Δt",
        "Amplifying signal amplitude"
      ],
      "feedback_correct": "Correct! Sampling captures signal values at discrete time points: x[n] = x(nΔt).",
      "feedback_incorrect": "Sampling is the temporal discretization process, not format conversion or frequency analysis.",
      "points": 2,
      "difficulty": "Easy",
      "topic": "Signals Time Domain",
      "tolerance": 0.05,
      "image_file": [],
      "subtopic": "Sampling"
    },
    {
      "type": "multiple_choice",
      "title": "Sampling Rate Definition",
      "question_text": "The sampling rate fs (or sampling frequency) refers to:",
      "correct_answer": "Frequency of discrete measurements per second",
      "choices": [
        "Signal amplitude magnitude",
        "Frequency of discrete measurements per second",
        "Total signal duration",
        "Original signal frequency content"
      ],
      "feedback_correct": "Correct! Sampling rate fs = 1/Δt determines how frequently signal measurements are taken.",
      "feedback_incorrect": "Sampling rate specifically measures temporal frequency of data acquisition, not signal characteristics.",
      "points": 2,
      "difficulty": "Easy",
      "topic": "Signals Time Domain",
      "tolerance": 0.05,
      "image_file": [],
      "subtopic": "Sampling"
    },
    {
      "type": "multiple_choice",
      "title": "Undersampling Consequences",
      "question_text": "When the sampling rate fs is too low relative to signal frequency, what occurs?",
      "correct_answer": "Aliasing distortion and information loss",
      "choices": [
        "Signal amplification",
        "Frequency content increases",
        "Aliasing distortion and information loss",
        "Automatic format conversion"
      ],
      "feedback_correct": "Correct! Undersampling (fs < 2fmax) causes aliasing, violating the Nyquist criterion.",
      "feedback_incorrect": "Low sampling rates create aliasing artifacts, not amplification or frequency enhancement.",
      "points": 3,
      "difficulty": "Medium",
      "topic": "Signals Time Domain",
      "tolerance": 0.05,
      "image_file": [],
      "subtopic": "Sampling"
    },
    {
      "type": "multiple_choice",
      "title": "Sampling Process Analogy",
      "question_text": "Which analogy best represents the temporal sampling process?",
      "correct_answer": "Taking photographs of moving objects at intervals",
      "choices": [
        "Taking photographs of moving objects at intervals",
        "Continuous audio recording",
        "Calculating geometric areas",
        "Solving algebraic equations"
      ],
      "feedback_correct": "Correct! Photography captures discrete 'snapshots' at time intervals, like signal sampling.",
      "feedback_incorrect": "Sampling involves discrete temporal capture, similar to photography, not continuous processes.",
      "points": 2,
      "difficulty": "Easy",
      "topic": "Signals Time Domain",
      "tolerance": 0.05,
      "image_file": [],
      "subtopic": "Sampling"
    },
    {
      "type": "multiple_choice",
      "title": "Analog-to-Digital Conversion",
      "question_text": "The process of converting continuous analog signals into discrete digital representations is called:",
      "correct_answer": "Sampling",
      "choices": [
        "Sampling",
        "Quantization",
        "Encoding",
        "Modulation"
      ],
      "feedback_correct": "Correct! Sampling discretizes continuous signals in time, creating digital signal sequences.",
      "feedback_incorrect": "While quantization and encoding are related, sampling specifically handles temporal discretization.",
      "points": 2,
      "difficulty": "Easy",
      "topic": "Signals Time Domain",
      "tolerance": 0.05,
      "image_file": [],
      "subtopic": "Sampling"
    },
    {
      "type": "true_false",
      "title": "Sampling Rate and Quality Relationship",
      "question_text": "Higher sampling rates fs always improve digital signal representation quality and reduce aliasing effects.",
      "correct_answer": "True",
      "choices": [
        "True",
        "False"
      ],
      "feedback_correct": "Correct! Higher fs provides better temporal resolution and reduces aliasing, improving signal fidelity.",
      "feedback_incorrect": "Increased sampling rates capture more signal information, reducing aliasing and improving quality.",
      "points": 2,
      "difficulty": "Easy",
      "topic": "Signals Time Domain",
      "tolerance": 0.05,
      "image_file": [],
      "subtopic": "Sampling"
    },
    {
      "type": "numerical",
      "title": "Cosine Function Analysis",
      "question_text": "For the function i(t) = 10cos(4 $\\pit $), calculate the frequency f in Hz using f = $\\omega $/(2 $\\pi $).",
      "correct_answer": "2",
      "choices": [],
      "feedback_correct": "Correct! $\\omega $ = 4 $\\pi $ rad/s, so f = 4 $\\pi $/(2 $\\pi $) = 2 $\\text{Hz}$. Amplitude $ A = 10$, phase $\\phi $ = 0.",
      "feedback_incorrect": "Extract $\\omega $ from the argument: 4 $\\pit $ means $\\omega $ = 4 $\\pi $, then f = $\\omega $/(2 $\\pi $) = 2 $\\text{Hz}$.",
      "points": 3,
      "difficulty": "Medium",
      "topic": "Signals Time Domain",
      "tolerance": 0.1,
      "image_file": [],
      "subtopic": "Sinusoidal Functions"
    },
    {
      "type": "multiple_choice",
      "title": "Cosine Wave Parameters",
      "question_text": "For i(t) = 10cos(4 $\\pit $), identify the amplitude A, frequency f, and phase $\\phi $:",
      "correct_answer": "$ A = 10$, f = 2 $\\text{Hz}$, $\\phi $ = 0",
      "choices": [
        "$ A = 10$, f = 4 $\\text{Hz}$, $\\phi $ = $\\pi $/2",
        "$ A = 4$, f = 10 $\\text{Hz}$, $\\phi $ = 0",
        "$ A = 10$, f = 2 $\\text{Hz}$, $\\phi $ = 0",
        "$ A = 10$, f = 2 $\\text{Hz}$, $\\phi $ = $\\pi $"
      ],
      "feedback_correct": "Correct! $ A = 10$, $\\omega $ = 4 $\\pi $ gives f = 2 $\\text{Hz}$, and no phase term means $\\phi $ = 0.",
      "feedback_incorrect": "Standard form: A cos($\\omegat $ + $\\phi $). Here $ A = 10$, $\\omega $ = 4 $\\pi \\rightarrow $ f = 2 $\\text{Hz}$, $\\phi $ = 0.",
      "points": 3,
      "difficulty": "Medium",
      "topic": "Signals Time Domain",
      "tolerance": 0.05,
      "image_file": [],
      "subtopic": "Sinusoidal Functions"
    },
    {
      "type": "numerical",
      "title": "Phase-Shifted Sine Analysis",
      "question_text": "For v(t) = 2 $\\text{s}$ in(2 $\\pit $ + $\\pi $/2), calculate the frequency f in Hz.",
      "correct_answer": "1",
      "choices": [],
      "feedback_correct": "Correct! $\\omega $ = 2 $\\pi $ rad/s, so f = 2 $\\pi $/(2 $\\pi $) = 1 $\\text{Hz}$. $ A = 2$, $\\phi $ = $\\pi $/2.",
      "feedback_incorrect": "From 2 $\\pit $ coefficient: $\\omega $ = 2 $\\pi $, therefore f = $\\omega $/(2 $\\pi $) = 1 $\\text{Hz}$.",
      "points": 3,
      "difficulty": "Medium",
      "topic": "Signals Time Domain",
      "tolerance": 0.1,
      "image_file": [],
      "subtopic": "Sinusoidal Functions"
    }
}